module.exports = {
    parser: "@typescript-eslint/parser",
    plugins: ["@netless", "prettier", "@typescript-eslint"],
    parserOptions: {
        project: "./tsconfig.lint.json",
        sourceType: "module",
    },
    extends: [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@netless/recommended",
        "prettier",
    ],
    rules: {
        "brace-style": ["error", "1tbs"],
        "comma-dangle": ["error", "always-multiline"],
        curly: ["error"],
        eqeqeq: ["error", "always"],
        "no-eval": ["error"],
        "no-throw-literal": ["off"],
        "no-trailing-spaces": ["error"],
        "no-unsafe-finally": ["error"],
        "prefer-const": ["error"],
        "spaced-comment": [
            "error",
            "always",
            {
                markers: ["/"],
            },
        ],
        "use-isnan": ["error"],
        "no-var": ["error"],
        semi: ["error", "always"],
        "arrow-parens": ["error", "as-needed"],
        "@netless/case-curly-brace": ["error"],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                selector: "class",
                format: ["PascalCase"],
            },
        ],
        "@typescript-eslint/array-type": [
            "error",
            {
                default: "array",
            },
        ],
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                accessibility: "explicit",
                overrides: {
                    accessors: "explicit",
                    constructors: "explicit",
                },
            },
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                multiline: {
                    delimiter: "semi",
                    requireLast: true,
                },
                singleline: {
                    delimiter: "semi",
                    requireLast: false,
                },
            },
        ],
        "@typescript-eslint/consistent-type-assertions": ["error"],
        "@typescript-eslint/no-unused-expressions": ["error"],
        "@typescript-eslint/prefer-namespace-keyword": ["error"],
        "@typescript-eslint/quotes": ["error", "double"],
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/type-annotation-spacing": ["error"],
        "@typescript-eslint/no-throw-literal": ["error"],
        "@typescript-eslint/explicit-function-return-type": ["error"],
        "@typescript-eslint/explicit-module-boundary-types": ["error"],
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "prettier/prettier": "error",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/no-misused-promises": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/require-await": "off",
    },
};
